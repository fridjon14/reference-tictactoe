#!/bin/bash

echo Cleaning...
rm -rf ./build
echo "1!!!!!!!!!!!"
if [ -z "$GIT_COMMIT" ]; then
  export GIT_COMMIT=$(git rev-parse HEAD)
  export GIT_URL=$(git config --get remote.origin.url)
fi

# Remove .git from url in order to get https link to repo (assumes https url for GitHub)
export GITHUB_URL=$(echo $GIT_URL | rev | cut -c 5- | rev)
echo "2!!!!!!!!!!!"
# echo "GIT_COMMIT=$(echo $GIT_COMMIT)" >> ./build/.env

npm install --silent
cd client
npm install --silent
cd ..

echo Building app
npm run build
echo "3!!!!!!!!!!!"

rc=$?
if [[ $rc != 0 ]] ; then
    echo "Npm build failed with exit code " $rc
    exit $rc
fi
echo "4!!!!!!!!!!!"
cat > ./build/githash.txt <<_EOF_
$GIT_COMMIT
_EOF_

#Save the GitCommit number to the .env file for later use.
cat > ./build/.env <<_EOF_
GIT_COMMIT=$GIT_COMMIT
_EOF_

mkdir ./build/public
cat > ./build/public/version.html << _EOF_
<!doctype html>
<head>
   <title>App version information</title>
</head>
<body>
   <span>Origin:</span> <span>$GITHUB_URL</span>
   <span>Revision:</span> <span>$GIT_COMMIT</span>
   <p>
   <div><a href="$GITHUB_URL/commits/$GIT_COMMIT">History of current version</a></div>
</body>
_EOF_

#Create the neccersary folder for the build, and copy files into it. 
cp ./Dockerfile ./build/
cp package.json ./build/
cp runnode.sh   ./build/
cp docker-compose.yml ./build
cd build
echo Building docker image

#Builds the docker image.
docker build -t fridjon14/tictactoe:$GIT_COMMIT .

rc=$?
if [[ $rc != 0 ]] ; then
    echo "Docker build failed " $rc
    exit $rc
fi
#Upload the docker file.
docker push fridjon14/tictactoe:$GIT_COMMIT
rc=$?
if [[ $rc != 0 ]] ; then
    echo "Docker push failed " $rc
    exit $rc
fi

echo "Done"
